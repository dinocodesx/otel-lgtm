version: '3.8'

services:
  # Express Application
  express-app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
      - "9090:9090"  # Prometheus metrics endpoint
    environment:
      - NODE_ENV=development
      - SERVICE_NAME=otel-lgtm-express-app
      - SERVICE_VERSION=1.0.0
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318
      - OTEL_SERVICE_NAME=otel-lgtm-express-app
      - LOG_LEVEL=info
    depends_on:
      - otel-collector
    networks:
      - otel-lgtm

  # OpenTelemetry Collector
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./config/otel/otel-collector.yml:/etc/otel-collector-config.yaml
    ports:
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP HTTP receiver
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # Health check
    depends_on:
      - prometheus
      - tempo
      - loki
    networks:
      - otel-lgtm

  # Prometheus for Metrics
  prometheus:
    image: prom/prometheus:latest
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --web.console.templates=/etc/prometheus/consoles
      - --storage.tsdb.retention.time=200h
      - --web.enable-lifecycle
    ports:
      - "9091:9090"
    volumes:
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./data/prometheus:/prometheus
    networks:
      - otel-lgtm

  # Grafana Tempo for Traces
  tempo:
    image: grafana/tempo:latest
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./config/tempo/tempo.yml:/etc/tempo.yaml
      - ./data/tempo:/tmp/tempo
    ports:
      - "3200:3200"   # Tempo
      - "14268:14268" # Jaeger ingest
    networks:
      - otel-lgtm

  # Grafana Loki for Logs
  loki:
    image: grafana/loki:latest
    user: "0:0"  # Run as root to handle permissions
    ports:
      - "3100:3100"
    volumes:
      - ./data/loki:/loki
    command: -config.file=/etc/loki/local-config.yaml
    environment:
      - LOKI_CONFIG_FILE=/etc/loki/local-config.yaml
    networks:
      - otel-lgtm

  # Grafana for Visualization
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - ./config/grafana/provisioning:/etc/grafana/provisioning
      - ./data/grafana:/var/lib/grafana
    depends_on:
      - prometheus
      - tempo
      - loki
    networks:
      - otel-lgtm

networks:
  otel-lgtm:
    driver: bridge