receivers:
  # OTLP receiver for traces, metrics, and logs
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318

  # Prometheus receiver for scraping metrics
  prometheus:
    config:
      scrape_configs:
        - job_name: "otel-collector"
          scrape_interval: 10s
          static_configs:
            - targets: ["0.0.0.0:8888"]

processors:
  # Batch processor for performance
  batch:
    timeout: 1s
    send_batch_size: 1024
    send_batch_max_size: 2048

  # Memory limiter to prevent OOM
  memory_limiter:
    limit_mib: 400
    spike_limit_mib: 100
    check_interval: 5s

  # Resource processor to add additional attributes
  resource:
    attributes:
      - key: service.namespace
        value: "otel-lgtm"
        action: upsert
      - key: deployment.environment
        value: "development"
        action: upsert

  # Attributes processor for span/log processing
  attributes:
    actions:
      - key: http.user_agent
        action: delete
      - key: net.peer.ip
        action: delete

exporters:
  # Export traces to Tempo
  otlp/tempo:
    endpoint: http://tempo:4317
    tls:
      insecure: true

  # Export logs to Loki via OTLP
  loki:
    endpoint: http://loki:3100/loki/api/v1/push
    format: json
    labels:
      attributes:
        service.name: "service_name"
        service.namespace: "service_namespace"
        deployment.environment: "deployment_environment"
      resource:
        service.name: "service_name"
        service.namespace: "service_namespace"

  # Export metrics to Prometheus
  prometheus:
    endpoint: "0.0.0.0:8889"
    const_labels:
      environment: development

  # Logging exporter for debugging
  logging:
    loglevel: info
    sampling_initial: 5
    sampling_thereafter: 200

  # Debug exporter for troubleshooting
  debug:
    verbosity: normal
    sampling_initial: 2
    sampling_thereafter: 500

extensions:
  # Health check extension
  health_check:
    endpoint: 0.0.0.0:13133

  # Performance profiling
  pprof:
    endpoint: 0.0.0.0:1777

  # Memory ballast extension
  memory_ballast:
    size_mib: 64

service:
  extensions: [health_check, pprof, memory_ballast]

  pipelines:
    # Traces pipeline
    traces:
      receivers: [otlp]
      processors: [memory_limiter, batch, resource, attributes]
      exporters: [otlp/tempo, logging]

    # Metrics pipeline
    metrics:
      receivers: [otlp, prometheus]
      processors: [memory_limiter, batch, resource]
      exporters: [prometheus, logging]

    # Logs pipeline
    logs:
      receivers: [otlp]
      processors: [memory_limiter, batch, resource]
      exporters: [loki, logging]

  telemetry:
    logs:
      level: "info"
    metrics:
      address: 0.0.0.0:8888
